<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:amq="http://activemq.apache.org/schema/core" 
	xmlns:jms="http://www.springframework.org/schema/jms"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd 
        http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core-5.9.0.xsd
        http://www.springframework.org/schema/jms http://www.springframework.org/schema/jms/spring-jms-3.2.xsd 
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

    <!-- Uncomment and your base-package here:-->
	<context:component-scan base-package="com.example"/>  

	<tx:annotation-driven transaction-manager="transactionManager" />
	<context:annotation-config />
    <mvc:annotation-driven />
    	<!-- Declaring this should work and you shouldn't even have to create a JtaTransactionManager or
			set it anywhere, but doing it this way causes hibernate to not be able to find the JtaTransaction. 
		<tx:jta-transaction-manager/> 
		--> 

	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
	        <!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
	        <property name="prefix" value="/WEB-INF/view/"/>
	        <property name="suffix" value=".jsp"/>
	</bean>
	
	<bean id="quotesDataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
      <property name="jndiName">
          <!--  <value>java:/QuotesDS</value> -->
          <value>java:/QuotesXADS</value>
      </property>
    </bean>
	
	
	<!-- This is for NON-XA jdbc -->
	<!-- 
	<bean id="sessionFactory"  
        class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">  
        <property name="dataSource" ref="quotesDataSource" />  
        <property name="annotatedClasses">  
            <list>  
                <value>com.example.model.Quote</value>  
            </list>  
        </property>  
        <property name="hibernateProperties">  
            <props>  
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>  
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>  
            </props>  
        </property>  
    </bean>  
    <bean id="hibernateTransactionManager"  
        class="org.springframework.orm.hibernate3.HibernateTransactionManager">  
        <property name="sessionFactory" ref="sessionFactory" />  
    </bean>  
  --> 
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="quotesDataSource" />  
		<property name="packagesToScan" value="com.example.model"/>
 	    <property name="hibernateProperties">
  		  <props>
        	<prop key="dialect">${hibernate.dialect}</prop>
        	<prop key="show_sql">${hibernate.show_sql}</prop>
        	<prop key="hibernate.transaction.factory_class">org.hibernate.transaction.JTATransactionFactory</prop>
        	<prop key="hibernate.transaction.manager_lookup_class">org.hibernate.transaction.JBossTransactionManagerLookup</prop>
          </props>
 		</property>    
 		<property name="jtaTransactionManager" ref="transactionManager"/>
	</bean>

	<!--  Local transaction manager for hibernate --> 
	<!-- 
	  <bean id="transactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
	  </bean>	
 	-->

	<bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
      <property name="transactionManagerName" value="java:/TransactionManager"/>
      <property name="userTransactionName" value="java:comp/UserTransaction" />
     <!--  <property name="allowCustomIsolationLevels" value="true"/> -->
	</bean>

	<!-- We need a way to get to the javax.transaction.TransactionManager the JTA is using -->	
	<bean id="javaxTransactionManager" class="org.springframework.beans.factory.config.PropertyPathFactoryBean">
		<property name="targetBeanName" value="transactionManager"/>
		<property name="propertyPath"   value="transactionManager"/>
	</bean>

 
    <!-- embedded broker example-->
    <!--
    <amq:broker>
      <amq:transportConnectors>
        <amq:transportConnector uri="tcp://localhost:61616">
        </amq:transportConnector>
      </amq:transportConnectors>
    </amq:broker>
    <amq:connectionFactory brokerURL="vm://localhost" id="jmsFactory"/>
    -->
	<!-- 
    <amq:connectionFactory brokerURL="tcp://localhost:61616" id="jmsFactory"/>
    -->
    
	<bean id="jmsFactory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
      <property name="brokerURL" value="tcp://localhost:61616" />
      <property name="clientID" value="quoteAppListener1" />
      <property name="prefetchPolicy">
        <bean class="org.apache.activemq.ActiveMQPrefetchPolicy">
          <property name="queuePrefetch" value="1"/>
        </bean>
      </property>
      <property name="redeliveryPolicy">
        <bean class="org.apache.activemq.RedeliveryPolicy">
          <property name="initialRedeliveryDelay" value="2000"/>
          <property name="maximumRedeliveries" value="-1"/>
          <property name="useExponentialBackOff" value="false"/>
		  <property name="queue" value="*" />   
        </bean>
      </property>
    </bean>    
    
    <!-- 
    <bean id="connectionFactory" 
          class="org.springframework.jms.connection.CachingConnectionFactory">
      <property name="targetConnectionFactory"  ref="jmsFactory"          />
    </bean>
 	-->
 	
 	<!-- 
  	<bean id="connectionFactory" class="org.springframework.jms.connection.SingleConnectionFactory" 
 		  destroy-method="destroy">
      	<constructor-arg ref="jmsFactory" />
    	<property name="reconnectOnException" value="true"/>
  	</bean>
 	-->
    <bean id="connectionFactory" class="org.apache.activemq.pool.XaPooledConnectionFactory">
        <property name="maxConnections" value="1" />
        <property name="connectionFactory" ref="jmsFactory" />
        <property name="transactionManager" ref="javaxTransactionManager" />
    </bean>

	<!-- names of queues and topics, this would normally come from configuration or jndi -->
    <bean id="quoteTopicDestName" class="java.lang.String">
      <constructor-arg index="0" value="VirtualTopic.quoteAppTopicDest"/>
    </bean>    
    <bean id="quoteTopicQueueC1Q1" class="java.lang.String">
      <constructor-arg index="0" value="Consumer.1.VirtualTopic.quoteAppTopicDest"/>
    </bean>    
    <bean id="preQuoteQueueDestName" class="java.lang.String">
      <constructor-arg index="0" value="preQuoteDest"/>
    </bean>    
    <bean id="postQuoteQueueDestName" class="java.lang.String">
      <constructor-arg index="0" value="postQuoteDest"/>
    </bean>   
    <!-- The queues and topics themselves --> 
    <amq:queue id="postQuoteDestination" physicalName="postQuoteDest" />
    <amq:queue id="preQuoteDestination" physicalName="preQuoteDest" />
    <bean id="quoteAppTopicDestination" class="org.apache.activemq.command.ActiveMQTopic">
	    <constructor-arg ref="quoteTopicDestName" />
  	</bean>
  	<bean id="quoteTopicQueueC1Q1Destination" class="org.apache.activemq.command.ActiveMQQueue">
  		<constructor-arg ref="quoteTopicQueueC1Q1" />
  	</bean>

    <bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
      <property name="connectionFactory"           ref="connectionFactory" />
      <property name="defaultDestination"          ref="postQuoteDestination" />
      <property name="sessionTransacted"         value="false" /> 
      <property name="sessionAcknowledgeMode" value="0"/>
    </bean>

    <!-- used for TOPICS only -->
	<bean id="jmsTopicTemplate" class="org.springframework.jms.core.JmsTemplate">
      <property name="connectionFactory"           ref="connectionFactory" />
      <property name="defaultDestination"          ref="quoteAppTopicDestination" />
      <property name="sessionTransacted"         value="false" /> 
      <property name="sessionAcknowledgeMode"    value="0"/>
   	  <property name="pubSubDomain"              value="true"/>
	</bean>    

	<bean id="messageSender" class="com.example.messaging.MessageSender">
		<property name="jmsTopicTemplate"          ref="jmsTopicTemplate" />
		<property name="jmsTemplate"               ref="jmsTemplate" />
		<property name="quoteTopicDestName"        ref="quoteTopicDestName" />
		<property name="preQuoteQueueDestName"     ref="preQuoteQueueDestName" />
		<property name="postQuoteQueueDestName"    ref="postQuoteQueueDestName" />
	</bean>

	<!-- 
	<jms:listener-container connection-factory="connectionFactory" 
							destination-type="durableTopic" 
							transaction-manager="transactionManager" >
		<jms:listener destination="quoteAppTopicDest" ref="newQuoteMessageListener"/>
	</jms:listener-container>
 -->
 
 
         <!-- <property name="clientId" value="quoteAppListener1"/> -->
    <!--  Durable Topic Listener -->
    <!--      
  	<bean id="listenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="quoteAppTopicDestination" />
        <property name="messageListener" ref="newQuoteMessageListener" />
        <property name="subscriptionDurable" value="true"/>
        <property name="durableSubscriptionName" value="quoteAppSubscription1"/>
        <property name="pubSubDomain" value="true"/>
        <property name="transactionManager" ref="transactionManager" />
        <property name="sessionAcknowledgeMode" value="0" />
	</bean> 
	-->
	<!-- Queue Listener -->
  	<bean id="listenerContainer" class="org.springframework.jms.listener.DefaultMessageListenerContainer">
        <property name="connectionFactory" ref="connectionFactory" />
        <property name="destination" ref="quoteTopicQueueC1Q1Destination" />
        <property name="messageListener" ref="newQuoteMessageListener" />
        <property name="subscriptionDurable" value="false"/>
        <property name="pubSubDomain" value="false"/>
        <property name="transactionManager" ref="transactionManager" />
        <property name="sessionAcknowledgeMode" value="0" />
	</bean> 

</beans>
